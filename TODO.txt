Next Steps:

1_Error handling to map std:io:error and serde_json::error to custom error types
2_First implementation of LAZY
3_Basis statistics




_Init

{"type":"init","msg_id":1,"node_id":"n1","node_ids":["n1", "n2", "n3"]} 

{"type":"init","msg_id":1,"node_id":"n2","node_ids":["n1", "n2", "n3"]} 



_ Generate
{"src": "c1", "dest": "n1", "body": {"type": "echo", "msg_id": 1, "echo": "Please echo howzit"}}

{"src": "c2", "dest": "n2", "body": {"type": "echo", "msg_id": 1, "echo": "Please echo howzit"}}

_Unique ID 
{"src": "c1", "dest": "n1", "body": {"type": "generate"}}


_Broadcast
{"src": "c2", "dest": "n2", "body": {"type": "broadcast", "message": 10}}





{"type":"init","msg_id":1,"node_id":"n1","node_ids":["n2"]} 

{"type":"init","msg_id":1,"node_id":"n2","node_ids":["n3"]} 

{"src": "c1", "dest": "n1", "body": {"type": "broadcast", "message": 5}}

{"src": "c2", "dest": "n2", "body": {"type": "broadcast", "message": 10}}

